import 'package:flutter/material.dart';
import 'package:materialgramclient/core/models/attachment.dart';
import 'package:materialgramclient/core/models/message.dart';
import 'package:materialgramclient/widgets/chat_app_bar.dart';
import 'package:materialgramclient/widgets/message_bubble_widget.dart';
import 'package:materialgramclient/widgets/chat_input_field.dart';
import 'package:materialgramclient/widgets/attachment_bottom_sheet.dart';

/// –≠–∫—Ä–∞–Ω —á–∞—Ç–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ
/// TODO: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Telegram API –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
class ChatScreen extends StatefulWidget {
  const ChatScreen({super.key});

  @override
  _ChatScreenState createState() => _ChatScreenState();
}

class _ChatScreenState extends State<ChatScreen> {
  final List<Message> _messages = []; // –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
  final TextEditingController _textController = TextEditingController(); // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
  final List<Attachment> _attachments = []; // –°–ø–∏—Å–æ–∫ –≤–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
  final ScrollController _scrollController = ScrollController(); // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

  @override
  void initState() {
    super.initState();
    // –ó–∞–≥–ª—É—à–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram API
    _messages.addAll([
      Message(
        text: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
        isMe: false,
        time: '12:30',
        attachments: [],
      ),
      Message(
        text: '–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —Ç–≤–æ–∏ —É—Å–ø–µ—Ö–∏ —Å Flutter?',
        isMe: true,
        time: '12:31',
        attachments: [],
      ),
      Message(
        text: '–û—Ç–ª–∏—á–Ω–æ! Material 3 –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ—Ç—Ä—è—Å–∞—é—â–µ üòä',
        isMe: false,
        time: '12:32',
        attachments: [],
      ),
    ]);
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  /// TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Telegram Bot API –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
  void _sendMessage() {
    if (_textController.text.isNotEmpty || _attachments.isNotEmpty) {
      setState(() {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞ (reverse: true –≤ ListView)
        _messages.insert(0, Message(
          text: _textController.text,
          isMe: true,
          time: '${DateTime.now().hour}:${DateTime.now().minute.toString().padLeft(2, '0')}',
          attachments: List.from(_attachments), // –ö–æ–ø–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤–ª–æ–∂–µ–Ω–∏–π
        ));
        _textController.clear();
        _attachments.clear();
      });
      
      // TODO: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telegram API
      // _sendTelegramMessage(_textController.text, _attachments);
      
      // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
      WidgetsBinding.instance.addPostFrameCallback((_) {
        if (_scrollController.hasClients) {
          _scrollController.animateTo(
            0,
            duration: const Duration(milliseconds: 300),
            curve: Curves.easeOut,
          );
        }
      });
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç bottom sheet –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –≤–ª–æ–∂–µ–Ω–∏—è
  /// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏/—Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
  void _addAttachment() {
    showModalBottomSheet(
      context: context,
      backgroundColor: Theme.of(context).colorScheme.surface,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
      ),
      builder: (context) => AttachmentBottomSheet(
        onPhotoSelected: () {
          setState(() {
            // TODO: –†–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
            _attachments.add(Attachment(type: 'image', content: 'assets/avatars/default.png'));
          });
          Navigator.pop(context);
        },
        onDocumentSelected: () {
          setState(() {
            // TODO: –†–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
            _attachments.add(Attachment(type: 'document', content: 'document.pdf'));
          });
          Navigator.pop(context);
        },
        onAudioSelected: () {
          setState(() {
            // TODO: –†–µ–∞–ª—å–Ω–∞—è –∑–∞–ø–∏—Å—å –∞—É–¥–∏–æ
            _attachments.add(Attachment(type: 'audio', content: 'audio.mp3'));
          });
          Navigator.pop(context);
        },
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;

    return Scaffold(
      appBar: ChatAppBar(
        onVideoCall: () {
          // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –±–æ—Ç–æ–≤
        },
        onVoiceCall: () {
          // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –±–æ—Ç–æ–≤
        },
      ),
      body: Column(
        children: [
          // –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π
          Expanded(
            child: Container(
              decoration: BoxDecoration(
                color: colorScheme.surfaceVariant.withOpacity(0.1),
              ),
              child: ListView.builder(
                controller: _scrollController,
                reverse: true, // –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—è–≤–ª—è—é—Ç—Å—è —Å–Ω–∏–∑—É
                padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 8),
                itemCount: _messages.length,
                itemBuilder: (context, index) {
                  final message = _messages[index];
                  return MessageBubble(
                    text: message.text,
                    isMe: message.isMe,
                    time: message.time,
                    attachments: message.attachments,
                  );
                },
              ),
            ),
          ),
          // –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
          ChatInputField(
            textController: _textController,
            attachments: _attachments,
            onAttachmentAdded: _addAttachment,
            onSendMessage: _sendMessage,
            onAttachmentRemoved: (index) {
              setState(() {
                _attachments.removeAt(index);
              });
            },
          ),
        ],
      ),
    );
  }

  @override
  void dispose() {
    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
    _textController.dispose();
    _scrollController.dispose();
    super.dispose();
  }
}

/// ============================================================================
/// –ß–¢–û –ù–£–ñ–ù–û –î–û–î–ï–õ–ê–¢–¨ –î–õ–Ø –ü–†–ò–í–Ø–ó–ö–ò –ö TELEGRAM:
/// ============================================================================

/// 1. –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° TELEGRAM BOT API
/// ----------------------------------------------------------------------------
/// 
/// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API:
/// 
/// dependencies:
///   telegram_bot_api: ^2.0.0
/// 
/// –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTP –∑–∞–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é:
/// 
/// import 'package:http/http.dart' as http;
/// 
/// 
/// 2. –ö–õ–ê–°–° –î–õ–Ø –†–ê–ë–û–¢–´ –° TELEGRAM API
/// ----------------------------------------------------------------------------
/// 
/// class TelegramService {
///   final String botToken;
///   final String apiUrl = 'https://api.telegram.org/bot';
/// 
///   TelegramService(this.botToken);
/// 
///   /// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
///   Future<List<Message>> getUpdates(int offset) async {
///     final response = await http.get(
///       Uri.parse('$apiUrl$botToken/getUpdates?offset=$offset'),
///     );
///     
///     if (response.statusCode == 200) {
///       final data = json.decode(response.body);
///       // –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ data['result']
///       return _parseMessages(data['result']);
///     }
///     return [];
///   }
/// 
///   /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
///   Future<void> sendMessage(String chatId, String text, List<Attachment> attachments) async {
///     if (attachments.isEmpty) {
///       // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
///       await http.post(
///         Uri.parse('$apiUrl$botToken/sendMessage'),
///         body: {
///           'chat_id': chatId,
///           'text': text,
///         },
///       );
///     } else {
///       // –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
///       for (final attachment in attachments) {
///         switch (attachment.type) {
///           case 'image':
///             await _sendPhoto(chatId, attachment.content);
///             break;
///           case 'document':
///             await _sendDocument(chatId, attachment.content);
///             break;
///           case 'audio':
///             await _sendAudio(chatId, attachment.content);
///             break;
///         }
///       }
///     }
///   }
/// 
///   /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
///   Future<void> _sendPhoto(String chatId, String filePath) async {
///     // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ multipart request
///   }
/// 
///   /// –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram API
///   List<Message> _parseMessages(List<dynamic> updates) {
///     // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö API –≤ –º–æ–¥–µ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
///   }
/// }
/// 
/// 
/// 3. –û–ë–ù–û–í–õ–ï–ù–ò–ï –≠–ö–†–ê–ù–ê –ß–ê–¢–ê
/// ----------------------------------------------------------------------------
/// 
/// class _ChatScreenState extends State<ChatScreen> {
///   TelegramService? _telegramService;
///   Timer? _updateTimer;
///   int _lastUpdateId = 0;
/// 
///   @override
///   void initState() {
///     super.initState();
///     _initTelegramService();
///     _startUpdatePolling();
///   }
/// 
///   /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ Telegram
///   void _initTelegramService() {
///     // –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫/—Ö—Ä–∞–Ω–∏–ª–∏—â–∞
///     final token = 'YOUR_BOT_TOKEN';
///     _telegramService = TelegramService(token);
///   }
/// 
///   /// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
///   void _startUpdatePolling() {
///     _updateTimer = Timer.periodic(Duration(seconds: 2), (timer) async {
///       final updates = await _telegramService!.getUpdates(_lastUpdateId + 1);
///       if (updates.isNotEmpty) {
///         setState(() {
///           _messages.insertAll(0, updates);
///           _lastUpdateId = updates.last.updateId;
///         });
///       }
///     });
///   }
/// 
///   /// –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API
///   void _sendMessage() async {
///     if (_textController.text.isNotEmpty || _attachments.isNotEmpty) {
///       await _telegramService!.sendMessage(
///         'CHAT_ID', // –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å ID —á–∞—Ç–∞
///         _textController.text,
///         _attachments,
///       );
///       // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥...
///     }
///   }
/// 
///   @override
///   void dispose() {
///     _updateTimer?.cancel();
///     super.dispose();
///   }
/// }
/// 
/// 
/// 4. –†–ê–ë–û–¢–ê –° –ú–ï–î–ò–ê–§–ê–ô–õ–ê–ú–ò
/// ----------------------------------------------------------------------------
/// 
/// /// –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
/// /// image_picker: ^1.0.4 - –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
/// /// file_picker: ^5.0.0 - –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
/// /// permission_handler: ^11.0.0 - –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
/// 
/// Future<void> _pickImage() async {
///   final pickedFile = await ImagePicker().pickImage(source: ImageSource.gallery);
///   if (pickedFile != null) {
///     setState(() {
///       _attachments.add(Attachment(
///         type: 'image',
///         content: pickedFile.path,
///         file: File(pickedFile.path),
///       ));
///     });
///   }
/// }
/// 
/// 
/// 5. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø –ò –•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•
/// ----------------------------------------------------------------------------
/// 
/// /// –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞:
/// /// shared_preferences: ^2.0.0 - –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
/// 
/// /// –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
/// /// –ù—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤,
/// /// –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ, —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∏ —Ç.–¥.
/// 
/// 
/// 6. –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
/// ----------------------------------------------------------------------------
/// 
/// /// –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API
/// 
/// void _sendMessage() async {
///   try {
///     await _telegramService!.sendMessage(...);
///   } catch (e) {
///     ScaffoldMessenger.of(context).showSnackBar(
///       SnackBar(content: Text('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: $e')),
///     );
///   }
/// }
/// 
/// 
/// 7. WEBHOOK VS POLLING
/// ----------------------------------------------------------------------------
/// 
/// /// –î–ª—è production –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å webhook –≤–º–µ—Å—Ç–æ polling:
/// 
/// void _setupWebhook() async {
///   await http.post(
///     Uri.parse('$apiUrl$botToken/setWebhook'),
///     body: {
///       'url': 'https://yourdomain.com/webhook',
///     },
///   );
/// }
/// 
/// 
/// 8. –°–û–°–¢–û–Ø–ù–ò–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø
/// ----------------------------------------------------------------------------
/// 
/// /// –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
/// /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ—Ç–µ—Ä—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
/// 
/// 
/// 9. –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•
/// ----------------------------------------------------------------------------
/// 
/// /// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
/// /// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å hive –∏–ª–∏ sqflite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
/// 
/// 
/// 10. –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
/// ----------------------------------------------------------------------------
/// 
/// /// –î–æ–±–∞–≤–∏—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
/// /// flutter_local_notifications: ^15.0.0
/// 
/// 
/// –í–ê–ñ–ù–û: Telegram Bot API –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
/// - –ë–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–µ—Ä–≤—ã–º–∏
/// - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤
/// - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º (–∑–≤–æ–Ω–∫–∏, —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —á–∞—Ç—ã)
/// 
/// –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram –Ω—É–∂–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å MTProto API (–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ tdlib)
/// –Ω–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–µ–µ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.